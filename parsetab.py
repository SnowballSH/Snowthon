
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLPARENRPARENleftPLUSMINUSleftMULTIPLYDIVIDEINTDIVleftDBEQEXEQLTGTleftEXCOLON COMMA DBEQ DBLT DIVIDE ELSE EQ EX EXEQ FLOAT FUNC GT ID IF INPUT INT INTDIV LCURLY LET LINE LPAREN LT MINUS MULTIPLY OUTPUT PLUS RCURLY RPAREN STRING\n    calc : expr\n         | var_assign\n         | func_assign\n         | cout\n    \n    expr : LPAREN expr PLUS expr RPAREN\n         | LPAREN expr MINUS expr RPAREN\n         | LPAREN expr MULTIPLY expr RPAREN\n         | LPAREN expr DIVIDE expr RPAREN\n         | LPAREN expr INTDIV expr RPAREN\n\n         | LPAREN expr DBEQ expr RPAREN\n         | LPAREN expr EXEQ expr RPAREN\n         | LPAREN expr LT expr RPAREN\n         | LPAREN expr GT expr RPAREN\n         | LPAREN EX expr RPAREN\n    \n    multi_calc : multi_calc LINE calc\n               | calc\n    \n    expr : expr MULTIPLY expr\n         | expr DIVIDE expr\n         | expr INTDIV expr\n         | expr PLUS expr\n         | expr MINUS expr\n\n         | expr DBEQ expr\n         | expr EXEQ expr\n         | expr LT expr\n         | expr GT expr\n         | EX expr\n    \n    expr : PLUS expr\n         | MINUS expr\n    \n    expr : INT\n         | FLOAT\n    \n    multi_expr : multi_expr COMMA expr\n               | expr\n    \n    expr : STRING\n    \n    multi_id : multi_id COMMA ID\n             | ID\n    \n    calc : IF LPAREN expr RPAREN LCURLY multi_calc ELSE multi_calc RCURLY\n    \n    calc : IF LPAREN expr RPAREN LCURLY multi_calc RCURLY\n    \n    var_assign : LET ID EQ expr\n    \n    func_assign : FUNC ID LPAREN multi_id RPAREN LCURLY multi_calc RCURLY\n    \n    cout : OUTPUT DBLT expr\n    \n    expr : INPUT\n    var_assign : ID DBLT INPUT\n    \n    calc : ID LPAREN multi_expr RPAREN\n    \n    expr : ID\n    '
    
_lr_action_items = {'IF':([0,82,97,99,101,],[6,6,6,6,6,]),'ID':([0,7,9,10,11,16,17,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,64,78,82,94,97,99,101,],[8,31,31,31,31,37,38,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,80,31,8,98,8,8,8,]),'LPAREN':([0,6,7,8,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,38,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[7,28,7,32,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,64,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'EX':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[11,30,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PLUS':([0,2,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,67,68,69,70,71,72,73,74,75,76,78,79,82,83,84,85,86,87,88,89,90,91,92,97,99,101,],[9,22,9,-44,9,9,9,-29,-30,-33,-41,9,9,9,9,9,9,9,9,9,9,50,9,-44,9,-27,-28,-26,9,-17,-18,-19,-20,-21,-22,-23,-24,-25,22,9,9,9,9,9,9,9,9,9,-26,22,9,22,-20,-21,-17,-18,-19,-22,-23,-24,-25,-14,9,22,9,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,9,9,9,]),'MINUS':([0,2,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,67,68,69,70,71,72,73,74,75,76,78,79,82,83,84,85,86,87,88,89,90,91,92,97,99,101,],[10,23,10,-44,10,10,10,-29,-30,-33,-41,10,10,10,10,10,10,10,10,10,10,51,10,-44,10,-27,-28,-26,10,-17,-18,-19,-20,-21,-22,-23,-24,-25,23,10,10,10,10,10,10,10,10,10,-26,23,10,23,-20,-21,-17,-18,-19,-22,-23,-24,-25,-14,10,23,10,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,10,10,10,]),'INT':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FLOAT':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'STRING':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'INPUT':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,33,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,62,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LET':([0,82,97,99,101,],[16,16,16,16,16,]),'FUNC':([0,82,97,99,101,],[17,17,17,17,17,]),'OUTPUT':([0,82,97,99,101,],[18,18,18,18,18,]),'$end':([1,2,3,4,5,8,12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,62,65,76,77,79,83,84,85,86,87,88,89,90,91,100,105,106,],[0,-1,-2,-3,-4,-44,-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,-42,-40,-14,-43,-38,-5,-6,-7,-8,-9,-10,-11,-12,-13,-37,-39,-36,]),'ELSE':([2,3,4,5,8,12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,62,65,76,77,79,83,84,85,86,87,88,89,90,91,95,96,100,104,105,106,],[-1,-2,-3,-4,-44,-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,-42,-40,-14,-43,-38,-5,-6,-7,-8,-9,-10,-11,-12,-13,99,-16,-37,-15,-39,-36,]),'RCURLY':([2,3,4,5,8,12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,62,65,76,77,79,83,84,85,86,87,88,89,90,91,95,96,100,102,103,104,105,106,],[-1,-2,-3,-4,-44,-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,-42,-40,-14,-43,-38,-5,-6,-7,-8,-9,-10,-11,-12,-13,100,-16,-37,105,106,-15,-39,-36,]),'LINE':([2,3,4,5,8,12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,62,65,76,77,79,83,84,85,86,87,88,89,90,91,95,96,100,102,103,104,105,106,],[-1,-2,-3,-4,-44,-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,-42,-40,-14,-43,-38,-5,-6,-7,-8,-9,-10,-11,-12,-13,101,-16,-37,101,101,-15,-39,-36,]),'MULTIPLY':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[19,-44,-29,-30,-33,-41,52,-44,19,19,-26,-17,-18,-19,19,19,-22,-23,-24,-25,19,-26,19,19,19,19,-17,-18,-19,-22,-23,-24,-25,-14,19,-5,-6,-7,-8,-9,-10,-11,-12,-13,19,]),'DIVIDE':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[20,-44,-29,-30,-33,-41,53,-44,20,20,-26,-17,-18,-19,20,20,-22,-23,-24,-25,20,-26,20,20,20,20,-17,-18,-19,-22,-23,-24,-25,-14,20,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,]),'INTDIV':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[21,-44,-29,-30,-33,-41,54,-44,21,21,-26,-17,-18,-19,21,21,-22,-23,-24,-25,21,-26,21,21,21,21,-17,-18,-19,-22,-23,-24,-25,-14,21,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,]),'DBEQ':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[24,-44,-29,-30,-33,-41,55,-44,24,24,-26,24,24,24,24,24,-22,-23,-24,-25,24,-26,24,24,24,24,24,24,24,-22,-23,-24,-25,-14,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,24,]),'EXEQ':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[25,-44,-29,-30,-33,-41,56,-44,25,25,-26,25,25,25,25,25,-22,-23,-24,-25,25,-26,25,25,25,25,25,25,25,-22,-23,-24,-25,-14,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,25,]),'LT':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[26,-44,-29,-30,-33,-41,57,-44,26,26,-26,26,26,26,26,26,-22,-23,-24,-25,26,-26,26,26,26,26,26,26,26,-22,-23,-24,-25,-14,26,-5,-6,-7,-8,-9,-10,-11,-12,-13,26,]),'GT':([2,8,12,13,14,15,29,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,76,79,83,84,85,86,87,88,89,90,91,92,],[27,-44,-29,-30,-33,-41,58,-44,27,27,-26,27,27,27,27,27,-22,-23,-24,-25,27,-26,27,27,27,27,27,27,27,-22,-23,-24,-25,-14,27,-5,-6,-7,-8,-9,-10,-11,-12,-13,27,]),'DBLT':([8,18,],[33,39,]),'RPAREN':([12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,49,59,60,61,67,68,69,70,71,72,73,74,75,76,80,81,83,84,85,86,87,88,89,90,91,92,98,],[-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,66,76,77,-32,83,84,85,86,87,88,89,90,91,-14,-35,93,-5,-6,-7,-8,-9,-10,-11,-12,-13,-31,-34,]),'COMMA':([12,13,14,15,31,34,35,36,40,41,42,43,44,45,46,47,48,60,61,76,80,81,83,84,85,86,87,88,89,90,91,92,98,],[-29,-30,-33,-41,-44,-27,-28,-26,-17,-18,-19,-20,-21,-22,-23,-24,-25,78,-32,-14,-35,94,-5,-6,-7,-8,-9,-10,-11,-12,-13,-31,-34,]),'EQ':([37,],[63,]),'LCURLY':([66,93,],[82,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,82,97,99,101,],[1,96,96,96,104,]),'expr':([0,7,9,10,11,19,20,21,22,23,24,25,26,27,28,30,32,39,50,51,52,53,54,55,56,57,58,63,78,82,97,99,101,],[2,29,34,35,36,40,41,42,43,44,45,46,47,48,49,59,61,65,67,68,69,70,71,72,73,74,75,79,92,2,2,2,2,]),'var_assign':([0,82,97,99,101,],[3,3,3,3,3,]),'func_assign':([0,82,97,99,101,],[4,4,4,4,4,]),'cout':([0,82,97,99,101,],[5,5,5,5,5,]),'multi_expr':([32,],[60,]),'multi_id':([64,],[81,]),'multi_calc':([82,97,99,],[95,102,103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expr','calc',1,'p_calc','Lexer.py',173),
  ('calc -> var_assign','calc',1,'p_calc','Lexer.py',174),
  ('calc -> func_assign','calc',1,'p_calc','Lexer.py',175),
  ('calc -> cout','calc',1,'p_calc','Lexer.py',176),
  ('expr -> LPAREN expr PLUS expr RPAREN','expr',5,'p_expr','Lexer.py',184),
  ('expr -> LPAREN expr MINUS expr RPAREN','expr',5,'p_expr','Lexer.py',185),
  ('expr -> LPAREN expr MULTIPLY expr RPAREN','expr',5,'p_expr','Lexer.py',186),
  ('expr -> LPAREN expr DIVIDE expr RPAREN','expr',5,'p_expr','Lexer.py',187),
  ('expr -> LPAREN expr INTDIV expr RPAREN','expr',5,'p_expr','Lexer.py',188),
  ('expr -> LPAREN expr DBEQ expr RPAREN','expr',5,'p_expr','Lexer.py',190),
  ('expr -> LPAREN expr EXEQ expr RPAREN','expr',5,'p_expr','Lexer.py',191),
  ('expr -> LPAREN expr LT expr RPAREN','expr',5,'p_expr','Lexer.py',192),
  ('expr -> LPAREN expr GT expr RPAREN','expr',5,'p_expr','Lexer.py',193),
  ('expr -> LPAREN EX expr RPAREN','expr',4,'p_expr','Lexer.py',194),
  ('multi_calc -> multi_calc LINE calc','multi_calc',3,'p_multi_calc','Lexer.py',204),
  ('multi_calc -> calc','multi_calc',1,'p_multi_calc','Lexer.py',205),
  ('expr -> expr MULTIPLY expr','expr',3,'p_bin_op','Lexer.py',215),
  ('expr -> expr DIVIDE expr','expr',3,'p_bin_op','Lexer.py',216),
  ('expr -> expr INTDIV expr','expr',3,'p_bin_op','Lexer.py',217),
  ('expr -> expr PLUS expr','expr',3,'p_bin_op','Lexer.py',218),
  ('expr -> expr MINUS expr','expr',3,'p_bin_op','Lexer.py',219),
  ('expr -> expr DBEQ expr','expr',3,'p_bin_op','Lexer.py',221),
  ('expr -> expr EXEQ expr','expr',3,'p_bin_op','Lexer.py',222),
  ('expr -> expr LT expr','expr',3,'p_bin_op','Lexer.py',223),
  ('expr -> expr GT expr','expr',3,'p_bin_op','Lexer.py',224),
  ('expr -> EX expr','expr',2,'p_bin_op','Lexer.py',225),
  ('expr -> PLUS expr','expr',2,'p_unary_op','Lexer.py',235),
  ('expr -> MINUS expr','expr',2,'p_unary_op','Lexer.py',236),
  ('expr -> INT','expr',1,'p_factor','Lexer.py',243),
  ('expr -> FLOAT','expr',1,'p_factor','Lexer.py',244),
  ('multi_expr -> multi_expr COMMA expr','multi_expr',3,'p_multi_expr','Lexer.py',251),
  ('multi_expr -> expr','multi_expr',1,'p_multi_expr','Lexer.py',252),
  ('expr -> STRING','expr',1,'p_string','Lexer.py',262),
  ('multi_id -> multi_id COMMA ID','multi_id',3,'p_multi_id','Lexer.py',269),
  ('multi_id -> ID','multi_id',1,'p_multi_id','Lexer.py',270),
  ('calc -> IF LPAREN expr RPAREN LCURLY multi_calc ELSE multi_calc RCURLY','calc',9,'p_if_else','Lexer.py',280),
  ('calc -> IF LPAREN expr RPAREN LCURLY multi_calc RCURLY','calc',7,'p_if','Lexer.py',287),
  ('var_assign -> LET ID EQ expr','var_assign',4,'p_var_assign','Lexer.py',294),
  ('func_assign -> FUNC ID LPAREN multi_id RPAREN LCURLY multi_calc RCURLY','func_assign',8,'p_func_assign','Lexer.py',301),
  ('cout -> OUTPUT DBLT expr','cout',3,'p_cout','Lexer.py',308),
  ('expr -> INPUT','expr',1,'p_cin','Lexer.py',315),
  ('var_assign -> ID DBLT INPUT','var_assign',3,'p_cin','Lexer.py',316),
  ('calc -> ID LPAREN multi_expr RPAREN','calc',4,'p_func_access','Lexer.py',326),
  ('expr -> ID','expr',1,'p_var_access','Lexer.py',333),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLPARENRPARENleftPLUSMINUSleftMULTIPLYDIVIDEINTDIVleftDBEQEXEQLTGTleftEXCOLON COMMA DBEQ DBLT DIVIDE ELSE EQ EX EXEQ FLOAT FUNC GT ID IF INPUT INT INTDIV LCURLY LET LINE LPAREN LT MINUS MULTIPLY OUTPUT PLUS RCURLY RPAREN STRING\n    calc : expr\n         | var_assign\n         | func_assign\n         | cout\n         | empty\n    \n    expr : LPAREN expr PLUS expr RPAREN\n         | LPAREN expr MINUS expr RPAREN\n         | LPAREN expr MULTIPLY expr RPAREN\n         | LPAREN expr DIVIDE expr RPAREN\n         | LPAREN expr INTDIV expr RPAREN\n\n         | LPAREN expr DBEQ expr RPAREN\n         | LPAREN expr EXEQ expr RPAREN\n         | LPAREN expr LT expr RPAREN\n         | LPAREN expr GT expr RPAREN\n         | LPAREN EX expr RPAREN\n    \n    multi_calc : multi_calc LINE calc\n               | calc\n    \n    expr : expr MULTIPLY expr\n         | expr DIVIDE expr\n         | expr INTDIV expr\n         | expr PLUS expr\n         | expr MINUS expr\n\n         | expr DBEQ expr\n         | expr EXEQ expr\n         | expr LT expr\n         | expr GT expr\n         | EX expr\n    \n    expr : PLUS expr\n         | MINUS expr\n    \n    expr : INT\n         | FLOAT\n    \n    multi_expr : multi_expr COMMA expr\n               | expr\n               | empty\n    \n    expr : STRING\n    \n    multi_id : multi_id COMMA ID\n             | ID\n             | empty\n    \n    calc : IF LPAREN expr RPAREN LCURLY multi_calc ELSE multi_calc RCURLY\n    \n    calc : IF LPAREN expr RPAREN LCURLY multi_calc RCURLY\n    \n    var_assign : LET ID EQ expr\n    \n    func_assign : FUNC ID LPAREN multi_id RPAREN LCURLY multi_calc RCURLY\n    \n    cout : OUTPUT DBLT expr\n    \n    expr : INPUT\n    var_assign : ID DBLT INPUT\n    \n    calc : ID LPAREN multi_expr RPAREN\n    \n    expr : ID\n    empty :'
    
_lr_action_items = {'IF':([0,85,100,102,104,],[7,7,7,7,7,]),'ID':([0,8,10,11,12,17,18,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,66,80,85,97,100,102,104,],[9,32,32,32,32,38,39,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,32,9,101,9,9,9,]),'LPAREN':([0,7,8,9,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,39,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[8,29,8,33,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,66,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'EX':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[12,31,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'PLUS':([0,2,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,67,69,70,71,72,73,74,75,76,77,78,80,81,85,86,87,88,89,90,91,92,93,94,95,100,102,104,],[10,23,10,-47,10,10,10,-30,-31,-35,-44,10,10,10,10,10,10,10,10,10,10,51,10,-47,10,-28,-29,-27,10,-18,-19,-20,-21,-22,-23,-24,-25,-26,23,10,10,10,10,10,10,10,10,10,-27,23,10,23,-21,-22,-18,-19,-20,-23,-24,-25,-26,-15,10,23,10,-6,-7,-8,-9,-10,-11,-12,-13,-14,23,10,10,10,]),'MINUS':([0,2,8,9,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,67,69,70,71,72,73,74,75,76,77,78,80,81,85,86,87,88,89,90,91,92,93,94,95,100,102,104,],[11,24,11,-47,11,11,11,-30,-31,-35,-44,11,11,11,11,11,11,11,11,11,11,52,11,-47,11,-28,-29,-27,11,-18,-19,-20,-21,-22,-23,-24,-25,-26,24,11,11,11,11,11,11,11,11,11,-27,24,11,24,-21,-22,-18,-19,-20,-23,-24,-25,-26,-15,11,24,11,-6,-7,-8,-9,-10,-11,-12,-13,-14,24,11,11,11,]),'INT':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'FLOAT':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'STRING':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'INPUT':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,34,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,64,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'LET':([0,85,100,102,104,],[17,17,17,17,17,]),'FUNC':([0,85,100,102,104,],[18,18,18,18,18,]),'OUTPUT':([0,85,100,102,104,],[19,19,19,19,19,]),'$end':([0,1,2,3,4,5,6,9,13,14,15,16,32,35,36,37,41,42,43,44,45,46,47,48,49,64,67,78,79,81,86,87,88,89,90,91,92,93,94,103,108,109,],[-48,0,-1,-2,-3,-4,-5,-47,-30,-31,-35,-44,-47,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-45,-43,-15,-46,-41,-6,-7,-8,-9,-10,-11,-12,-13,-14,-40,-42,-39,]),'ELSE':([2,3,4,5,6,9,13,14,15,16,32,35,36,37,41,42,43,44,45,46,47,48,49,64,67,78,79,81,85,86,87,88,89,90,91,92,93,94,98,99,103,104,107,108,109,],[-1,-2,-3,-4,-5,-47,-30,-31,-35,-44,-47,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-45,-43,-15,-46,-41,-48,-6,-7,-8,-9,-10,-11,-12,-13,-14,102,-17,-40,-48,-16,-42,-39,]),'RCURLY':([2,3,4,5,6,9,13,14,15,16,32,35,36,37,41,42,43,44,45,46,47,48,49,64,67,78,79,81,85,86,87,88,89,90,91,92,93,94,98,99,100,102,103,104,105,106,107,108,109,],[-1,-2,-3,-4,-5,-47,-30,-31,-35,-44,-47,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-45,-43,-15,-46,-41,-48,-6,-7,-8,-9,-10,-11,-12,-13,-14,103,-17,-48,-48,-40,-48,108,109,-16,-42,-39,]),'LINE':([2,3,4,5,6,9,13,14,15,16,32,35,36,37,41,42,43,44,45,46,47,48,49,64,67,78,79,81,85,86,87,88,89,90,91,92,93,94,98,99,100,102,103,104,105,106,107,108,109,],[-1,-2,-3,-4,-5,-47,-30,-31,-35,-44,-47,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-45,-43,-15,-46,-41,-48,-6,-7,-8,-9,-10,-11,-12,-13,-14,104,-17,-48,-48,-40,-48,104,104,-16,-42,-39,]),'MULTIPLY':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[20,-47,-30,-31,-35,-44,53,-47,20,20,-27,-18,-19,-20,20,20,-23,-24,-25,-26,20,-27,20,20,20,20,-18,-19,-20,-23,-24,-25,-26,-15,20,-6,-7,-8,-9,-10,-11,-12,-13,-14,20,]),'DIVIDE':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[21,-47,-30,-31,-35,-44,54,-47,21,21,-27,-18,-19,-20,21,21,-23,-24,-25,-26,21,-27,21,21,21,21,-18,-19,-20,-23,-24,-25,-26,-15,21,-6,-7,-8,-9,-10,-11,-12,-13,-14,21,]),'INTDIV':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[22,-47,-30,-31,-35,-44,55,-47,22,22,-27,-18,-19,-20,22,22,-23,-24,-25,-26,22,-27,22,22,22,22,-18,-19,-20,-23,-24,-25,-26,-15,22,-6,-7,-8,-9,-10,-11,-12,-13,-14,22,]),'DBEQ':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[25,-47,-30,-31,-35,-44,56,-47,25,25,-27,25,25,25,25,25,-23,-24,-25,-26,25,-27,25,25,25,25,25,25,25,-23,-24,-25,-26,-15,25,-6,-7,-8,-9,-10,-11,-12,-13,-14,25,]),'EXEQ':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[26,-47,-30,-31,-35,-44,57,-47,26,26,-27,26,26,26,26,26,-23,-24,-25,-26,26,-27,26,26,26,26,26,26,26,-23,-24,-25,-26,-15,26,-6,-7,-8,-9,-10,-11,-12,-13,-14,26,]),'LT':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[27,-47,-30,-31,-35,-44,58,-47,27,27,-27,27,27,27,27,27,-23,-24,-25,-26,27,-27,27,27,27,27,27,27,27,-23,-24,-25,-26,-15,27,-6,-7,-8,-9,-10,-11,-12,-13,-14,27,]),'GT':([2,9,13,14,15,16,30,32,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,78,81,86,87,88,89,90,91,92,93,94,95,],[28,-47,-30,-31,-35,-44,59,-47,28,28,-27,28,28,28,28,28,-23,-24,-25,-26,28,-27,28,28,28,28,28,28,28,-23,-24,-25,-26,-15,28,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,]),'DBLT':([9,19,],[34,40,]),'RPAREN':([13,14,15,16,32,33,35,36,37,41,42,43,44,45,46,47,48,49,50,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,82,83,84,86,87,88,89,90,91,92,93,94,95,101,],[-30,-31,-35,-44,-47,-48,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,68,78,79,-33,-34,-48,86,87,88,89,90,91,92,93,94,-15,-37,96,-38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-36,]),'COMMA':([13,14,15,16,32,33,35,36,37,41,42,43,44,45,46,47,48,49,61,62,63,66,78,82,83,84,86,87,88,89,90,91,92,93,94,95,101,],[-30,-31,-35,-44,-47,-48,-28,-29,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,80,-33,-34,-48,-15,-37,97,-38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-32,-36,]),'EQ':([38,],[65,]),'LCURLY':([68,96,],[85,100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,85,100,102,104,],[1,99,99,99,107,]),'expr':([0,8,10,11,12,20,21,22,23,24,25,26,27,28,29,31,33,40,51,52,53,54,55,56,57,58,59,65,80,85,100,102,104,],[2,30,35,36,37,41,42,43,44,45,46,47,48,49,50,60,62,67,69,70,71,72,73,74,75,76,77,81,95,2,2,2,2,]),'var_assign':([0,85,100,102,104,],[3,3,3,3,3,]),'func_assign':([0,85,100,102,104,],[4,4,4,4,4,]),'cout':([0,85,100,102,104,],[5,5,5,5,5,]),'empty':([0,33,66,85,100,102,104,],[6,63,84,6,6,6,6,]),'multi_expr':([33,],[61,]),'multi_id':([66,],[83,]),'multi_calc':([85,100,102,],[98,105,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expr','calc',1,'p_calc','Lexer.py',176),
  ('calc -> var_assign','calc',1,'p_calc','Lexer.py',177),
  ('calc -> func_assign','calc',1,'p_calc','Lexer.py',178),
  ('calc -> cout','calc',1,'p_calc','Lexer.py',179),
  ('calc -> empty','calc',1,'p_calc','Lexer.py',180),
  ('expr -> LPAREN expr PLUS expr RPAREN','expr',5,'p_expr','Lexer.py',188),
  ('expr -> LPAREN expr MINUS expr RPAREN','expr',5,'p_expr','Lexer.py',189),
  ('expr -> LPAREN expr MULTIPLY expr RPAREN','expr',5,'p_expr','Lexer.py',190),
  ('expr -> LPAREN expr DIVIDE expr RPAREN','expr',5,'p_expr','Lexer.py',191),
  ('expr -> LPAREN expr INTDIV expr RPAREN','expr',5,'p_expr','Lexer.py',192),
  ('expr -> LPAREN expr DBEQ expr RPAREN','expr',5,'p_expr','Lexer.py',194),
  ('expr -> LPAREN expr EXEQ expr RPAREN','expr',5,'p_expr','Lexer.py',195),
  ('expr -> LPAREN expr LT expr RPAREN','expr',5,'p_expr','Lexer.py',196),
  ('expr -> LPAREN expr GT expr RPAREN','expr',5,'p_expr','Lexer.py',197),
  ('expr -> LPAREN EX expr RPAREN','expr',4,'p_expr','Lexer.py',198),
  ('multi_calc -> multi_calc LINE calc','multi_calc',3,'p_multi_calc','Lexer.py',208),
  ('multi_calc -> calc','multi_calc',1,'p_multi_calc','Lexer.py',209),
  ('expr -> expr MULTIPLY expr','expr',3,'p_bin_op','Lexer.py',219),
  ('expr -> expr DIVIDE expr','expr',3,'p_bin_op','Lexer.py',220),
  ('expr -> expr INTDIV expr','expr',3,'p_bin_op','Lexer.py',221),
  ('expr -> expr PLUS expr','expr',3,'p_bin_op','Lexer.py',222),
  ('expr -> expr MINUS expr','expr',3,'p_bin_op','Lexer.py',223),
  ('expr -> expr DBEQ expr','expr',3,'p_bin_op','Lexer.py',225),
  ('expr -> expr EXEQ expr','expr',3,'p_bin_op','Lexer.py',226),
  ('expr -> expr LT expr','expr',3,'p_bin_op','Lexer.py',227),
  ('expr -> expr GT expr','expr',3,'p_bin_op','Lexer.py',228),
  ('expr -> EX expr','expr',2,'p_bin_op','Lexer.py',229),
  ('expr -> PLUS expr','expr',2,'p_unary_op','Lexer.py',239),
  ('expr -> MINUS expr','expr',2,'p_unary_op','Lexer.py',240),
  ('expr -> INT','expr',1,'p_factor','Lexer.py',247),
  ('expr -> FLOAT','expr',1,'p_factor','Lexer.py',248),
  ('multi_expr -> multi_expr COMMA expr','multi_expr',3,'p_multi_expr','Lexer.py',255),
  ('multi_expr -> expr','multi_expr',1,'p_multi_expr','Lexer.py',256),
  ('multi_expr -> empty','multi_expr',1,'p_multi_expr','Lexer.py',257),
  ('expr -> STRING','expr',1,'p_string','Lexer.py',269),
  ('multi_id -> multi_id COMMA ID','multi_id',3,'p_multi_id','Lexer.py',276),
  ('multi_id -> ID','multi_id',1,'p_multi_id','Lexer.py',277),
  ('multi_id -> empty','multi_id',1,'p_multi_id','Lexer.py',278),
  ('calc -> IF LPAREN expr RPAREN LCURLY multi_calc ELSE multi_calc RCURLY','calc',9,'p_if_else','Lexer.py',288),
  ('calc -> IF LPAREN expr RPAREN LCURLY multi_calc RCURLY','calc',7,'p_if','Lexer.py',295),
  ('var_assign -> LET ID EQ expr','var_assign',4,'p_var_assign','Lexer.py',302),
  ('func_assign -> FUNC ID LPAREN multi_id RPAREN LCURLY multi_calc RCURLY','func_assign',8,'p_func_assign','Lexer.py',309),
  ('cout -> OUTPUT DBLT expr','cout',3,'p_cout','Lexer.py',316),
  ('expr -> INPUT','expr',1,'p_cin','Lexer.py',323),
  ('var_assign -> ID DBLT INPUT','var_assign',3,'p_cin','Lexer.py',324),
  ('calc -> ID LPAREN multi_expr RPAREN','calc',4,'p_func_access','Lexer.py',334),
  ('expr -> ID','expr',1,'p_var_access','Lexer.py',341),
  ('empty -> <empty>','empty',0,'p_empty','Lexer.py',347),
]
